import glob, os

# Directory of DLLs to calculate and compare hash with hardcoded value
DLL_SEARCH_DIR = b'C:\\Windows\\SysWOW64\\'

def calc_hash(target: bytes) -> int:
    result = 0
    for char in target:
        result = ((result << 0x18) & 0xFFFFFFFF) | (result >> 0x8)
        result = (result + (char | 0x20)) & 0xFFFFFFFF
        result ^= 0x2035C4DD
    return result ^ 0x12345678

def find_dll_from_hash(hash_value: int) -> str:
    dll_path_list = [p for p in glob.glob(DLL_SEARCH_DIR + b'*.dll')]
    for dll_path in dll_path_list:
        dll_filename = os.path.basename(dll_path)
        if calc_hash(dll_filename) == hash_value:
            return dll_filename.decode()

def main():
    '''
    seg000:0000E62B check_hash:                             ; CODE XREF: seg000:0000E5D4â†‘j
    seg000:0000E62B                 xor     edi, 12345678h
    seg000:0000E631                 cmp     edi, 13FDAD7Bh
    seg000:0000E637                 jz      short hash_matched
    seg000:0000E639                 mov     ebx, [ebx+LDR_DATA_TABLE_ENTRY.InLoadOrderLinks.Flink]
    '''
    print(find_dll_from_hash(0x13FDAD7B))

if __name__ == '__main__':
    main()
