import ctypes, idc

# from function at offset 0x2FBD (third stage shellcode)
ENCRYPTED_CODE_ADDR = 0x980004
ENCRYPTED_CODE_SIZE = 0x26

def main():
    # Obtain encrypted code using idc.get_bytes function
    code = bytearray(idc.get_bytes(ENCRYPTED_CODE_ADDR, ENCRYPTED_CODE_SIZE))

    # Decrypt
    for i in range(ENCRYPTED_CODE_SIZE):
        code[i] = ctypes.c_ubyte(code[i] + 0x0D).value
        code[i] = ctypes.c_ubyte(code[i] ^ 0xF3).value
        code[i] = ctypes.c_ubyte(code[i] - 0x0D).value
    
    # Output
    with open('decrypted_code.bin', 'wb') as code_file:
        code_file.write(code)

if __name__ == '__main__':
    main()
