import win32con
import win32service

TARGET_HASHES = [0xE3823BF2, 0xE42EE5F5, 0xC46F5935, 0xE1D75A35, 0xB7BA4173, 0x6AFA4DBA, 0xEAEB1DB8, 0x5F2E6CFA, 0x616E5B6A]

# ref: https://gist.github.com/trietptm/5cd60ed6add5adad6a34098ce255949a#file-rol-ror-py-L13
ror = lambda val, r_bits, max_bits: \
    ((val & (2**max_bits-1)) >> r_bits%max_bits) | \
    (val << (max_bits-(r_bits%max_bits)) & (2**max_bits-1))
    
def hash_dll(data, hash_value):
    for char in data:
        if char >= 0x41 and char <= 0x5A:
            char |= 0x20
        hash_value = (char + ror(hash_value, 13, 32)) & 0xFFFFFFFF
    return hash_value

def main():
    hSCManager = win32service.OpenSCManager(None, None, win32con.GENERIC_READ)
    status_list = win32service.EnumServicesStatus(hSCManager, 
                                                  win32service.SERVICE_WIN32 | win32service.SERVICE_DRIVER, 
                                                  win32service.SERVICE_STATE_ALL)
    for short_name, desc, status in status_list:
        h = hash_dll(short_name.encode('utf-8') + b'\x00', 0)
        if h in TARGET_HASHES:
            print('[+] Hash ' + hex(h) + ' cracked: ' + short_name)

if __name__ == '__main__':
	main()
